// source: msp.cnt.kvm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var msp_cnt_pb = require('./msp.cnt_pb.js');
goog.object.extend(proto, msp_cnt_pb);
goog.exportSymbol('proto.msp.cnt.kvm.Advanced', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.ChnList', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.FileParam', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmCfgState', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmFile', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmFileNotify', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmGroup', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmGroupInfo', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmGroupList', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmInfo', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmInfoList', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmPush', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmState', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmStateList', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.KvmTv', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.MonitorInfo', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.PowerPrm', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.PowerPrms', null, global);
goog.exportSymbol('proto.msp.cnt.kvm.PushCfg', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.Advanced = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.Advanced, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.Advanced.displayName = 'proto.msp.cnt.kvm.Advanced';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmTv = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmTv.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmTv, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmTv.displayName = 'proto.msp.cnt.kvm.KvmTv';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmInfo.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmInfo.displayName = 'proto.msp.cnt.kvm.KvmInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmInfoList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmInfoList.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmInfoList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmInfoList.displayName = 'proto.msp.cnt.kvm.KvmInfoList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.MonitorInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.MonitorInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.MonitorInfo.displayName = 'proto.msp.cnt.kvm.MonitorInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmPush = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmPush, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmPush.displayName = 'proto.msp.cnt.kvm.KvmPush';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.PushCfg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.PushCfg.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.PushCfg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.PushCfg.displayName = 'proto.msp.cnt.kvm.PushCfg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmGroup.displayName = 'proto.msp.cnt.kvm.KvmGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmGroupList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmGroupList.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmGroupList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmGroupList.displayName = 'proto.msp.cnt.kvm.KvmGroupList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmGroupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmGroupInfo.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmGroupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmGroupInfo.displayName = 'proto.msp.cnt.kvm.KvmGroupInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.FileParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.FileParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.FileParam.displayName = 'proto.msp.cnt.kvm.FileParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmFile.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmFile.displayName = 'proto.msp.cnt.kvm.KvmFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmFileNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmFileNotify.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmFileNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmFileNotify.displayName = 'proto.msp.cnt.kvm.KvmFileNotify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmCfgState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmCfgState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmCfgState.displayName = 'proto.msp.cnt.kvm.KvmCfgState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmState.displayName = 'proto.msp.cnt.kvm.KvmState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.KvmStateList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.KvmStateList.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.KvmStateList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.KvmStateList.displayName = 'proto.msp.cnt.kvm.KvmStateList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.PowerPrm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.PowerPrm.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.PowerPrm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.PowerPrm.displayName = 'proto.msp.cnt.kvm.PowerPrm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.ChnList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.ChnList.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.ChnList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.ChnList.displayName = 'proto.msp.cnt.kvm.ChnList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.kvm.PowerPrms = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.kvm.PowerPrms.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.kvm.PowerPrms, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.kvm.PowerPrms.displayName = 'proto.msp.cnt.kvm.PowerPrms';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.Advanced.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.Advanced.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.Advanced} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.Advanced.toObject = function(includeInstance, msg) {
  var f, obj = {
    front: jspb.Message.getFieldWithDefault(msg, 1, 0),
    back: jspb.Message.getFieldWithDefault(msg, 2, 0),
    syncwidth: jspb.Message.getFieldWithDefault(msg, 3, 0),
    syncpolar: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.Advanced}
 */
proto.msp.cnt.kvm.Advanced.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.Advanced;
  return proto.msp.cnt.kvm.Advanced.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.Advanced} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.Advanced}
 */
proto.msp.cnt.kvm.Advanced.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setFront(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setBack(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSyncwidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSyncpolar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.Advanced.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.Advanced.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.Advanced} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.Advanced.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFront();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getBack();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getSyncwidth();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getSyncpolar();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
};


/**
 * optional fixed32 front = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.Advanced.prototype.getFront = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.Advanced} returns this
 */
proto.msp.cnt.kvm.Advanced.prototype.setFront = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 back = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.Advanced.prototype.getBack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.Advanced} returns this
 */
proto.msp.cnt.kvm.Advanced.prototype.setBack = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 syncwidth = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.Advanced.prototype.getSyncwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.Advanced} returns this
 */
proto.msp.cnt.kvm.Advanced.prototype.setSyncwidth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 syncpolar = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.Advanced.prototype.getSyncpolar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.Advanced} returns this
 */
proto.msp.cnt.kvm.Advanced.prototype.setSyncpolar = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmTv.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmTv.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmTv.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmTv} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmTv.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    arrayinList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmTv}
 */
proto.msp.cnt.kvm.KvmTv.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmTv;
  return proto.msp.cnt.kvm.KvmTv.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmTv} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmTv}
 */
proto.msp.cnt.kvm.KvmTv.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOutid(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed32());
      msg.setArrayinList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmTv.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmTv.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmTv} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmTv.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getOutid();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getArrayinList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      3,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmTv.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmTv} returns this
 */
proto.msp.cnt.kvm.KvmTv.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 outid = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmTv.prototype.getOutid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmTv} returns this
 */
proto.msp.cnt.kvm.KvmTv.prototype.setOutid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated fixed32 arrayin = 3;
 * @return {!Array<number>}
 */
proto.msp.cnt.kvm.KvmTv.prototype.getArrayinList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msp.cnt.kvm.KvmTv} returns this
 */
proto.msp.cnt.kvm.KvmTv.prototype.setArrayinList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmTv} returns this
 */
proto.msp.cnt.kvm.KvmTv.prototype.addArrayin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmTv} returns this
 */
proto.msp.cnt.kvm.KvmTv.prototype.clearArrayinList = function() {
  return this.setArrayinList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmInfo.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    row: jspb.Message.getFieldWithDefault(msg, 3, 0),
    col: jspb.Message.getFieldWithDefault(msg, 4, 0),
    module: jspb.Message.getFieldWithDefault(msg, 5, 0),
    menu: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    arraytvList: jspb.Message.toObjectList(msg.getArraytvList(),
    proto.msp.cnt.kvm.KvmTv.toObject, includeInstance),
    arraysrcList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmInfo}
 */
proto.msp.cnt.kvm.KvmInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmInfo;
  return proto.msp.cnt.kvm.KvmInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmInfo}
 */
proto.msp.cnt.kvm.KvmInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setRow(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setModule(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMenu(value);
      break;
    case 7:
      var value = new proto.msp.cnt.kvm.KvmTv;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmTv.deserializeBinaryFromReader);
      msg.addArraytv(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed32());
      msg.setArraysrcList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getRow();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getCol();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getModule();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
  f = message.getMenu();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getArraytvList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.msp.cnt.kvm.KvmTv.serializeBinaryToWriter
    );
  }
  f = message.getArraysrcList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      8,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional fixed32 id = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 row = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getRow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setRow = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 col = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setCol = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed32 module = 5;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getModule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setModule = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool menu = 6;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getMenu = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setMenu = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated KvmTv arraytv = 7;
 * @return {!Array<!proto.msp.cnt.kvm.KvmTv>}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getArraytvList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.KvmTv>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.KvmTv, 7));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.KvmTv>} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
*/
proto.msp.cnt.kvm.KvmInfo.prototype.setArraytvList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.msp.cnt.kvm.KvmTv=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmTv}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.addArraytv = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.msp.cnt.kvm.KvmTv, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.clearArraytvList = function() {
  return this.setArraytvList([]);
};


/**
 * repeated fixed32 arraysrc = 8;
 * @return {!Array<number>}
 */
proto.msp.cnt.kvm.KvmInfo.prototype.getArraysrcList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.setArraysrcList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.addArraysrc = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmInfo} returns this
 */
proto.msp.cnt.kvm.KvmInfo.prototype.clearArraysrcList = function() {
  return this.setArraysrcList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmInfoList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmInfoList.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmInfoList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmInfoList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmInfoList.toObject = function(includeInstance, msg) {
  var f, obj = {
    kvminfoList: jspb.Message.toObjectList(msg.getKvminfoList(),
    proto.msp.cnt.kvm.KvmInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmInfoList}
 */
proto.msp.cnt.kvm.KvmInfoList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmInfoList;
  return proto.msp.cnt.kvm.KvmInfoList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmInfoList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmInfoList}
 */
proto.msp.cnt.kvm.KvmInfoList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.kvm.KvmInfo;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmInfo.deserializeBinaryFromReader);
      msg.addKvminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmInfoList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmInfoList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmInfoList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmInfoList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKvminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.kvm.KvmInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KvmInfo kvminfo = 1;
 * @return {!Array<!proto.msp.cnt.kvm.KvmInfo>}
 */
proto.msp.cnt.kvm.KvmInfoList.prototype.getKvminfoList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.KvmInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.KvmInfo, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.KvmInfo>} value
 * @return {!proto.msp.cnt.kvm.KvmInfoList} returns this
*/
proto.msp.cnt.kvm.KvmInfoList.prototype.setKvminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.kvm.KvmInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmInfo}
 */
proto.msp.cnt.kvm.KvmInfoList.prototype.addKvminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.kvm.KvmInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmInfoList} returns this
 */
proto.msp.cnt.kvm.KvmInfoList.prototype.clearKvminfoList = function() {
  return this.setKvminfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.MonitorInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.MonitorInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.MonitorInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tvid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    module: jspb.Message.getFieldWithDefault(msg, 3, 0),
    scantype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    width: jspb.Message.getFieldWithDefault(msg, 5, 0),
    height: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fresh: jspb.Message.getFieldWithDefault(msg, 7, 0),
    advhor: (f = msg.getAdvhor()) && proto.msp.cnt.kvm.Advanced.toObject(includeInstance, f),
    advver: (f = msg.getAdvver()) && proto.msp.cnt.kvm.Advanced.toObject(includeInstance, f),
    flag: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.MonitorInfo}
 */
proto.msp.cnt.kvm.MonitorInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.MonitorInfo;
  return proto.msp.cnt.kvm.MonitorInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.MonitorInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.MonitorInfo}
 */
proto.msp.cnt.kvm.MonitorInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setTvid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setModule(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setScantype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setWidth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setFresh(value);
      break;
    case 8:
      var value = new proto.msp.cnt.kvm.Advanced;
      reader.readMessage(value,proto.msp.cnt.kvm.Advanced.deserializeBinaryFromReader);
      msg.setAdvhor(value);
      break;
    case 9:
      var value = new proto.msp.cnt.kvm.Advanced;
      reader.readMessage(value,proto.msp.cnt.kvm.Advanced.deserializeBinaryFromReader);
      msg.setAdvver(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.MonitorInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.MonitorInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.MonitorInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTvid();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getModule();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getScantype();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeFixed32(
      6,
      f
    );
  }
  f = message.getFresh();
  if (f !== 0) {
    writer.writeFixed32(
      7,
      f
    );
  }
  f = message.getAdvhor();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.msp.cnt.kvm.Advanced.serializeBinaryToWriter
    );
  }
  f = message.getAdvver();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.msp.cnt.kvm.Advanced.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeFixed32(
      10,
      f
    );
  }
};


/**
 * optional fixed32 tvid = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getTvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setTvid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 id = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 module = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getModule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setModule = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 scantype = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getScantype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setScantype = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed32 width = 5;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional fixed32 height = 6;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional fixed32 fresh = 7;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getFresh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setFresh = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Advanced advhor = 8;
 * @return {?proto.msp.cnt.kvm.Advanced}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getAdvhor = function() {
  return /** @type{?proto.msp.cnt.kvm.Advanced} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.kvm.Advanced, 8));
};


/**
 * @param {?proto.msp.cnt.kvm.Advanced|undefined} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
*/
proto.msp.cnt.kvm.MonitorInfo.prototype.setAdvhor = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.clearAdvhor = function() {
  return this.setAdvhor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.hasAdvhor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Advanced advver = 9;
 * @return {?proto.msp.cnt.kvm.Advanced}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getAdvver = function() {
  return /** @type{?proto.msp.cnt.kvm.Advanced} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.kvm.Advanced, 9));
};


/**
 * @param {?proto.msp.cnt.kvm.Advanced|undefined} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
*/
proto.msp.cnt.kvm.MonitorInfo.prototype.setAdvver = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.clearAdvver = function() {
  return this.setAdvver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.hasAdvver = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional fixed32 flag = 10;
 * @return {number}
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.MonitorInfo} returns this
 */
proto.msp.cnt.kvm.MonitorInfo.prototype.setFlag = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmPush.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmPush.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmPush} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmPush.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startx: jspb.Message.getFieldWithDefault(msg, 2, 0),
    starty: jspb.Message.getFieldWithDefault(msg, 3, 0),
    width: jspb.Message.getFieldWithDefault(msg, 4, 0),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    subid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmPush}
 */
proto.msp.cnt.kvm.KvmPush.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmPush;
  return proto.msp.cnt.kvm.KvmPush.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmPush} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmPush}
 */
proto.msp.cnt.kvm.KvmPush.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setStartx(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setStarty(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSubid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmPush.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmPush.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmPush} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmPush.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getStartx();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getStarty();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
  f = message.getSubid();
  if (f !== 0) {
    writer.writeFixed32(
      6,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 startx = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getStartx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setStartx = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 starty = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getStarty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setStarty = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 width = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed32 height = 5;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional fixed32 subid = 6;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmPush.prototype.getSubid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmPush} returns this
 */
proto.msp.cnt.kvm.KvmPush.prototype.setSubid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.PushCfg.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.PushCfg.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.PushCfg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.PushCfg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PushCfg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dstidList: jspb.Message.toObjectList(msg.getDstidList(),
    proto.msp.cnt.kvm.KvmPush.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.PushCfg}
 */
proto.msp.cnt.kvm.PushCfg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.PushCfg;
  return proto.msp.cnt.kvm.PushCfg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.PushCfg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.PushCfg}
 */
proto.msp.cnt.kvm.PushCfg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.msp.cnt.kvm.KvmPush;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmPush.deserializeBinaryFromReader);
      msg.addDstid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.PushCfg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.PushCfg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.PushCfg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PushCfg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getDstidList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.msp.cnt.kvm.KvmPush.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.PushCfg.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.PushCfg} returns this
 */
proto.msp.cnt.kvm.PushCfg.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 type = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.PushCfg.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.PushCfg} returns this
 */
proto.msp.cnt.kvm.PushCfg.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated KvmPush dstid = 3;
 * @return {!Array<!proto.msp.cnt.kvm.KvmPush>}
 */
proto.msp.cnt.kvm.PushCfg.prototype.getDstidList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.KvmPush>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.KvmPush, 3));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.KvmPush>} value
 * @return {!proto.msp.cnt.kvm.PushCfg} returns this
*/
proto.msp.cnt.kvm.PushCfg.prototype.setDstidList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msp.cnt.kvm.KvmPush=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmPush}
 */
proto.msp.cnt.kvm.PushCfg.prototype.addDstid = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msp.cnt.kvm.KvmPush, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.PushCfg} returns this
 */
proto.msp.cnt.kvm.PushCfg.prototype.clearDstidList = function() {
  return this.setDstidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    memnum: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmGroup}
 */
proto.msp.cnt.kvm.KvmGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmGroup;
  return proto.msp.cnt.kvm.KvmGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmGroup}
 */
proto.msp.cnt.kvm.KvmGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setParentid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setMemnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getParentid();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMemnum();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmGroup} returns this
 */
proto.msp.cnt.kvm.KvmGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 parentid = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.getParentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmGroup} returns this
 */
proto.msp.cnt.kvm.KvmGroup.prototype.setParentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.KvmGroup} returns this
 */
proto.msp.cnt.kvm.KvmGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional fixed32 memnum = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmGroup.prototype.getMemnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmGroup} returns this
 */
proto.msp.cnt.kvm.KvmGroup.prototype.setMemnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmGroupList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmGroupList.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmGroupList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmGroupList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroupList.toObject = function(includeInstance, msg) {
  var f, obj = {
    kvmgroupList: jspb.Message.toObjectList(msg.getKvmgroupList(),
    proto.msp.cnt.kvm.KvmGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmGroupList}
 */
proto.msp.cnt.kvm.KvmGroupList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmGroupList;
  return proto.msp.cnt.kvm.KvmGroupList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmGroupList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmGroupList}
 */
proto.msp.cnt.kvm.KvmGroupList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.kvm.KvmGroup;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmGroup.deserializeBinaryFromReader);
      msg.addKvmgroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmGroupList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmGroupList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmGroupList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroupList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKvmgroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.kvm.KvmGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KvmGroup kvmgroup = 1;
 * @return {!Array<!proto.msp.cnt.kvm.KvmGroup>}
 */
proto.msp.cnt.kvm.KvmGroupList.prototype.getKvmgroupList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.KvmGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.KvmGroup, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.KvmGroup>} value
 * @return {!proto.msp.cnt.kvm.KvmGroupList} returns this
*/
proto.msp.cnt.kvm.KvmGroupList.prototype.setKvmgroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.kvm.KvmGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmGroup}
 */
proto.msp.cnt.kvm.KvmGroupList.prototype.addKvmgroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.kvm.KvmGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmGroupList} returns this
 */
proto.msp.cnt.kvm.KvmGroupList.prototype.clearKvmgroupList = function() {
  return this.setKvmgroupList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmGroupInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmGroupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmGroupInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    memberList: jspb.Message.toObjectList(msg.getMemberList(),
    msp_cnt_pb.ValueU32.toObject, includeInstance),
    group: (f = msg.getGroup()) && proto.msp.cnt.kvm.KvmGroup.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo}
 */
proto.msp.cnt.kvm.KvmGroupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmGroupInfo;
  return proto.msp.cnt.kvm.KvmGroupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmGroupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo}
 */
proto.msp.cnt.kvm.KvmGroupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new msp_cnt_pb.ValueU32;
      reader.readMessage(value,msp_cnt_pb.ValueU32.deserializeBinaryFromReader);
      msg.addMember(value);
      break;
    case 2:
      var value = new proto.msp.cnt.kvm.KvmGroup;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmGroupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmGroupInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmGroupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      msp_cnt_pb.ValueU32.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.msp.cnt.kvm.KvmGroup.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
};


/**
 * repeated msp.cnt.ValueU32 member = 1;
 * @return {!Array<!proto.msp.cnt.ValueU32>}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.getMemberList = function() {
  return /** @type{!Array<!proto.msp.cnt.ValueU32>} */ (
    jspb.Message.getRepeatedWrapperField(this, msp_cnt_pb.ValueU32, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.ValueU32>} value
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo} returns this
*/
proto.msp.cnt.kvm.KvmGroupInfo.prototype.setMemberList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.ValueU32=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.ValueU32}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.addMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.ValueU32, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo} returns this
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.clearMemberList = function() {
  return this.setMemberList([]);
};


/**
 * optional KvmGroup group = 2;
 * @return {?proto.msp.cnt.kvm.KvmGroup}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.getGroup = function() {
  return /** @type{?proto.msp.cnt.kvm.KvmGroup} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.kvm.KvmGroup, 2));
};


/**
 * @param {?proto.msp.cnt.kvm.KvmGroup|undefined} value
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo} returns this
*/
proto.msp.cnt.kvm.KvmGroupInfo.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo} returns this
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional fixed32 id = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmGroupInfo} returns this
 */
proto.msp.cnt.kvm.KvmGroupInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.FileParam.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.FileParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.FileParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.FileParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: jspb.Message.getFieldWithDefault(msg, 1, 0),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    datatype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.FileParam}
 */
proto.msp.cnt.kvm.FileParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.FileParam;
  return proto.msp.cnt.kvm.FileParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.FileParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.FileParam}
 */
proto.msp.cnt.kvm.FileParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setDatatype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.FileParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.FileParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.FileParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.FileParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getDatatype();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
};


/**
 * optional fixed32 width = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.FileParam.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.FileParam} returns this
 */
proto.msp.cnt.kvm.FileParam.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 height = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.FileParam.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.FileParam} returns this
 */
proto.msp.cnt.kvm.FileParam.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 datatype = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.FileParam.prototype.getDatatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.FileParam} returns this
 */
proto.msp.cnt.kvm.FileParam.prototype.setDatatype = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.msp.cnt.kvm.FileParam.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.FileParam} returns this
 */
proto.msp.cnt.kvm.FileParam.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional fixed32 size = 5;
 * @return {number}
 */
proto.msp.cnt.kvm.FileParam.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.FileParam} returns this
 */
proto.msp.cnt.kvm.FileParam.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmFile.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmFile.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    curnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paramList: jspb.Message.toObjectList(msg.getParamList(),
    proto.msp.cnt.kvm.FileParam.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmFile}
 */
proto.msp.cnt.kvm.KvmFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmFile;
  return proto.msp.cnt.kvm.KvmFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmFile}
 */
proto.msp.cnt.kvm.KvmFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCurnum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setTotal(value);
      break;
    case 5:
      var value = new proto.msp.cnt.kvm.FileParam;
      reader.readMessage(value,proto.msp.cnt.kvm.FileParam.deserializeBinaryFromReader);
      msg.addParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getCurnum();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getParamList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msp.cnt.kvm.FileParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed32 type = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFile.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
 */
proto.msp.cnt.kvm.KvmFile.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 curnum = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFile.prototype.getCurnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
 */
proto.msp.cnt.kvm.KvmFile.prototype.setCurnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 offset = 3;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFile.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
 */
proto.msp.cnt.kvm.KvmFile.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 total = 4;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFile.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
 */
proto.msp.cnt.kvm.KvmFile.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated FileParam param = 5;
 * @return {!Array<!proto.msp.cnt.kvm.FileParam>}
 */
proto.msp.cnt.kvm.KvmFile.prototype.getParamList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.FileParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.FileParam, 5));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.FileParam>} value
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
*/
proto.msp.cnt.kvm.KvmFile.prototype.setParamList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msp.cnt.kvm.FileParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.FileParam}
 */
proto.msp.cnt.kvm.KvmFile.prototype.addParam = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msp.cnt.kvm.FileParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmFile} returns this
 */
proto.msp.cnt.kvm.KvmFile.prototype.clearParamList = function() {
  return this.setParamList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmFileNotify.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmFileNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmFileNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmFileNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kvmnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    idList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmFileNotify}
 */
proto.msp.cnt.kvm.KvmFileNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmFileNotify;
  return proto.msp.cnt.kvm.KvmFileNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmFileNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmFileNotify}
 */
proto.msp.cnt.kvm.KvmFileNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setNum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setKvmnum(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed32());
      msg.setIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmFileNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmFileNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmFileNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getKvmnum();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      3,
      f
    );
  }
};


/**
 * optional fixed32 num = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFileNotify} returns this
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 kvmnum = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.getKvmnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmFileNotify} returns this
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.setKvmnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated fixed32 id = 3;
 * @return {!Array<number>}
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msp.cnt.kvm.KvmFileNotify} returns this
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmFileNotify} returns this
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmFileNotify} returns this
 */
proto.msp.cnt.kvm.KvmFileNotify.prototype.clearIdList = function() {
  return this.setIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmCfgState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmCfgState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmCfgState.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kvm: (f = msg.getKvm()) && proto.msp.cnt.kvm.KvmInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmCfgState}
 */
proto.msp.cnt.kvm.KvmCfgState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmCfgState;
  return proto.msp.cnt.kvm.KvmCfgState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmCfgState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmCfgState}
 */
proto.msp.cnt.kvm.KvmCfgState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setState(value);
      break;
    case 2:
      var value = new proto.msp.cnt.kvm.KvmInfo;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmInfo.deserializeBinaryFromReader);
      msg.setKvm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmCfgState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmCfgState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmCfgState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getKvm();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.msp.cnt.kvm.KvmInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed32 state = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmCfgState} returns this
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional KvmInfo kvm = 2;
 * @return {?proto.msp.cnt.kvm.KvmInfo}
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.getKvm = function() {
  return /** @type{?proto.msp.cnt.kvm.KvmInfo} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.kvm.KvmInfo, 2));
};


/**
 * @param {?proto.msp.cnt.kvm.KvmInfo|undefined} value
 * @return {!proto.msp.cnt.kvm.KvmCfgState} returns this
*/
proto.msp.cnt.kvm.KvmCfgState.prototype.setKvm = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.kvm.KvmCfgState} returns this
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.clearKvm = function() {
  return this.setKvm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmCfgState.prototype.hasKvm = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmState.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmState.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dstip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    online: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    keylink: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    localkey: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    trslink: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    check: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    type: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmState}
 */
proto.msp.cnt.kvm.KvmState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmState;
  return proto.msp.cnt.kvm.KvmState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmState}
 */
proto.msp.cnt.kvm.KvmState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstip(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeylink(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalkey(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrslink(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCheck(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDstip();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getKeylink();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLocalkey();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTrslink();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getCheck();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeFixed32(
      9,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmState.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ip = 2;
 * @return {string}
 */
proto.msp.cnt.kvm.KvmState.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dstip = 3;
 * @return {string}
 */
proto.msp.cnt.kvm.KvmState.prototype.getDstip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setDstip = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool online = 4;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmState.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool keylink = 5;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmState.prototype.getKeylink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setKeylink = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool localkey = 6;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmState.prototype.getLocalkey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setLocalkey = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool trslink = 7;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmState.prototype.getTrslink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setTrslink = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool check = 8;
 * @return {boolean}
 */
proto.msp.cnt.kvm.KvmState.prototype.getCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setCheck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional fixed32 type = 9;
 * @return {number}
 */
proto.msp.cnt.kvm.KvmState.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.KvmState} returns this
 */
proto.msp.cnt.kvm.KvmState.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.KvmStateList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.KvmStateList.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.KvmStateList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.KvmStateList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmStateList.toObject = function(includeInstance, msg) {
  var f, obj = {
    kvmstateList: jspb.Message.toObjectList(msg.getKvmstateList(),
    proto.msp.cnt.kvm.KvmState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.KvmStateList}
 */
proto.msp.cnt.kvm.KvmStateList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.KvmStateList;
  return proto.msp.cnt.kvm.KvmStateList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.KvmStateList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.KvmStateList}
 */
proto.msp.cnt.kvm.KvmStateList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.kvm.KvmState;
      reader.readMessage(value,proto.msp.cnt.kvm.KvmState.deserializeBinaryFromReader);
      msg.addKvmstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.KvmStateList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.KvmStateList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.KvmStateList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.KvmStateList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKvmstateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.kvm.KvmState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KvmState kvmstate = 1;
 * @return {!Array<!proto.msp.cnt.kvm.KvmState>}
 */
proto.msp.cnt.kvm.KvmStateList.prototype.getKvmstateList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.KvmState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.KvmState, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.KvmState>} value
 * @return {!proto.msp.cnt.kvm.KvmStateList} returns this
*/
proto.msp.cnt.kvm.KvmStateList.prototype.setKvmstateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.kvm.KvmState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.KvmState}
 */
proto.msp.cnt.kvm.KvmStateList.prototype.addKvmstate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.kvm.KvmState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.KvmStateList} returns this
 */
proto.msp.cnt.kvm.KvmStateList.prototype.clearKvmstateList = function() {
  return this.setKvmstateList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.PowerPrm.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.PowerPrm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.PowerPrm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PowerPrm.toObject = function(includeInstance, msg) {
  var f, obj = {
    protocol: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chnidList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ip: jspb.Message.getFieldWithDefault(msg, 4, ""),
    on: jspb.Message.getFieldWithDefault(msg, 5, ""),
    off: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mac: jspb.Message.getFieldWithDefault(msg, 7, ""),
    slot: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.PowerPrm}
 */
proto.msp.cnt.kvm.PowerPrm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.PowerPrm;
  return proto.msp.cnt.kvm.PowerPrm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.PowerPrm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.PowerPrm}
 */
proto.msp.cnt.kvm.PowerPrm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setProtocol(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setMode(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed32());
      msg.setChnidList(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOff(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMac(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.PowerPrm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.PowerPrm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PowerPrm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtocol();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getMode();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getChnidList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      3,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOff();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMac();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSlot();
  if (f !== 0) {
    writer.writeFixed32(
      8,
      f
    );
  }
};


/**
 * optional fixed32 protocol = 1;
 * @return {number}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getProtocol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 mode = 2;
 * @return {number}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setMode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated fixed32 chnid = 3;
 * @return {!Array<number>}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getChnidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setChnidList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.addChnid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.clearChnidList = function() {
  return this.setChnidList([]);
};


/**
 * optional string ip = 4;
 * @return {string}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string on = 5;
 * @return {string}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setOn = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string off = 6;
 * @return {string}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getOff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setOff = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string mac = 7;
 * @return {string}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setMac = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional fixed32 slot = 8;
 * @return {number}
 */
proto.msp.cnt.kvm.PowerPrm.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.kvm.PowerPrm} returns this
 */
proto.msp.cnt.kvm.PowerPrm.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.ChnList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.ChnList.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.ChnList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.ChnList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.ChnList.toObject = function(includeInstance, msg) {
  var f, obj = {
    chnidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.ChnList}
 */
proto.msp.cnt.kvm.ChnList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.ChnList;
  return proto.msp.cnt.kvm.ChnList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.ChnList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.ChnList}
 */
proto.msp.cnt.kvm.ChnList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed32());
      msg.setChnidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.ChnList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.ChnList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.ChnList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.ChnList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChnidList();
  if (f.length > 0) {
    writer.writePackedFixed32(
      1,
      f
    );
  }
};


/**
 * repeated fixed32 chnid = 1;
 * @return {!Array<number>}
 */
proto.msp.cnt.kvm.ChnList.prototype.getChnidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msp.cnt.kvm.ChnList} returns this
 */
proto.msp.cnt.kvm.ChnList.prototype.setChnidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.ChnList} returns this
 */
proto.msp.cnt.kvm.ChnList.prototype.addChnid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.ChnList} returns this
 */
proto.msp.cnt.kvm.ChnList.prototype.clearChnidList = function() {
  return this.setChnidList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.kvm.PowerPrms.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.kvm.PowerPrms.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.kvm.PowerPrms.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.kvm.PowerPrms} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PowerPrms.toObject = function(includeInstance, msg) {
  var f, obj = {
    powerprmList: jspb.Message.toObjectList(msg.getPowerprmList(),
    proto.msp.cnt.kvm.PowerPrm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.kvm.PowerPrms}
 */
proto.msp.cnt.kvm.PowerPrms.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.kvm.PowerPrms;
  return proto.msp.cnt.kvm.PowerPrms.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.kvm.PowerPrms} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.kvm.PowerPrms}
 */
proto.msp.cnt.kvm.PowerPrms.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.kvm.PowerPrm;
      reader.readMessage(value,proto.msp.cnt.kvm.PowerPrm.deserializeBinaryFromReader);
      msg.addPowerprm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.kvm.PowerPrms.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.kvm.PowerPrms.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.kvm.PowerPrms} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.kvm.PowerPrms.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPowerprmList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.kvm.PowerPrm.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PowerPrm powerprm = 1;
 * @return {!Array<!proto.msp.cnt.kvm.PowerPrm>}
 */
proto.msp.cnt.kvm.PowerPrms.prototype.getPowerprmList = function() {
  return /** @type{!Array<!proto.msp.cnt.kvm.PowerPrm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.kvm.PowerPrm, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.kvm.PowerPrm>} value
 * @return {!proto.msp.cnt.kvm.PowerPrms} returns this
*/
proto.msp.cnt.kvm.PowerPrms.prototype.setPowerprmList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.kvm.PowerPrm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.kvm.PowerPrm}
 */
proto.msp.cnt.kvm.PowerPrms.prototype.addPowerprm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.kvm.PowerPrm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.kvm.PowerPrms} returns this
 */
proto.msp.cnt.kvm.PowerPrms.prototype.clearPowerprmList = function() {
  return this.setPowerprmList([]);
};


goog.object.extend(exports, proto.msp.cnt.kvm);
