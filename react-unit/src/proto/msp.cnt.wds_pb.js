// source: msp.cnt.wds.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var msp_cnt_sch_pb = require('./msp.cnt.sch_pb.js');
goog.object.extend(proto, msp_cnt_sch_pb);
goog.exportSymbol('proto.msp.cnt.wds.MergeWnd', null, global);
goog.exportSymbol('proto.msp.cnt.wds.MergeWnds', null, global);
goog.exportSymbol('proto.msp.cnt.wds.OPCODE', null, global);
goog.exportSymbol('proto.msp.cnt.wds.PTZCODE', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Ptz', null, global);
goog.exportSymbol('proto.msp.cnt.wds.RealPlay', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Rect', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Reorder', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Subwindow', null, global);
goog.exportSymbol('proto.msp.cnt.wds.WinState', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Window', null, global);
goog.exportSymbol('proto.msp.cnt.wds.Windows', null, global);
goog.exportSymbol('proto.msp.cnt.wds.WndDesc', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.WinState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.WinState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.WinState.displayName = 'proto.msp.cnt.wds.WinState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Subwindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.Subwindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Subwindow.displayName = 'proto.msp.cnt.wds.Subwindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.MergeWnd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.wds.MergeWnd.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.wds.MergeWnd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.MergeWnd.displayName = 'proto.msp.cnt.wds.MergeWnd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.MergeWnds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.wds.MergeWnds.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.wds.MergeWnds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.MergeWnds.displayName = 'proto.msp.cnt.wds.MergeWnds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Rect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.Rect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Rect.displayName = 'proto.msp.cnt.wds.Rect';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Window = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.Window, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Window.displayName = 'proto.msp.cnt.wds.Window';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Windows = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msp.cnt.wds.Windows.repeatedFields_, null);
};
goog.inherits(proto.msp.cnt.wds.Windows, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Windows.displayName = 'proto.msp.cnt.wds.Windows';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.WndDesc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.WndDesc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.WndDesc.displayName = 'proto.msp.cnt.wds.WndDesc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Reorder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.Reorder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Reorder.displayName = 'proto.msp.cnt.wds.Reorder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.Ptz = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.Ptz, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.Ptz.displayName = 'proto.msp.cnt.wds.Ptz';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msp.cnt.wds.RealPlay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msp.cnt.wds.RealPlay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msp.cnt.wds.RealPlay.displayName = 'proto.msp.cnt.wds.RealPlay';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.WinState.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.WinState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.WinState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.WinState.toObject = function(includeInstance, msg) {
  var f, obj = {
    window: (f = msg.getWindow()) && proto.msp.cnt.wds.Window.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.WinState}
 */
proto.msp.cnt.wds.WinState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.WinState;
  return proto.msp.cnt.wds.WinState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.WinState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.WinState}
 */
proto.msp.cnt.wds.WinState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.wds.Window;
      reader.readMessage(value,proto.msp.cnt.wds.Window.deserializeBinaryFromReader);
      msg.setWindow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.WinState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.WinState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.WinState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.WinState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWindow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.msp.cnt.wds.Window.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
};


/**
 * optional Window window = 1;
 * @return {?proto.msp.cnt.wds.Window}
 */
proto.msp.cnt.wds.WinState.prototype.getWindow = function() {
  return /** @type{?proto.msp.cnt.wds.Window} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.wds.Window, 1));
};


/**
 * @param {?proto.msp.cnt.wds.Window|undefined} value
 * @return {!proto.msp.cnt.wds.WinState} returns this
*/
proto.msp.cnt.wds.WinState.prototype.setWindow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.WinState} returns this
 */
proto.msp.cnt.wds.WinState.prototype.clearWindow = function() {
  return this.setWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.WinState.prototype.hasWindow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional fixed32 state = 2;
 * @return {number}
 */
proto.msp.cnt.wds.WinState.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.WinState} returns this
 */
proto.msp.cnt.wds.WinState.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Subwindow.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Subwindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Subwindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Subwindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    srcid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    error: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Subwindow}
 */
proto.msp.cnt.wds.Subwindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Subwindow;
  return proto.msp.cnt.wds.Subwindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Subwindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Subwindow}
 */
proto.msp.cnt.wds.Subwindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSrcid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Subwindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Subwindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Subwindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Subwindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getSrcid();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.wds.Subwindow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Subwindow} returns this
 */
proto.msp.cnt.wds.Subwindow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 srcid = 2;
 * @return {number}
 */
proto.msp.cnt.wds.Subwindow.prototype.getSrcid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Subwindow} returns this
 */
proto.msp.cnt.wds.Subwindow.prototype.setSrcid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.msp.cnt.wds.Subwindow.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.wds.Subwindow} returns this
 */
proto.msp.cnt.wds.Subwindow.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.wds.MergeWnd.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.MergeWnd.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.MergeWnd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.MergeWnd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.MergeWnd.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && msp_cnt_sch_pb.Tswid.toObject(includeInstance, f),
    style: jspb.Message.getFieldWithDefault(msg, 2, 0),
    subwindowList: jspb.Message.toObjectList(msg.getSubwindowList(),
    proto.msp.cnt.wds.Subwindow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.MergeWnd}
 */
proto.msp.cnt.wds.MergeWnd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.MergeWnd;
  return proto.msp.cnt.wds.MergeWnd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.MergeWnd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.MergeWnd}
 */
proto.msp.cnt.wds.MergeWnd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new msp_cnt_sch_pb.Tswid;
      reader.readMessage(value,msp_cnt_sch_pb.Tswid.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setStyle(value);
      break;
    case 3:
      var value = new proto.msp.cnt.wds.Subwindow;
      reader.readMessage(value,proto.msp.cnt.wds.Subwindow.deserializeBinaryFromReader);
      msg.addSubwindow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.MergeWnd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.MergeWnd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.MergeWnd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.MergeWnd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      msp_cnt_sch_pb.Tswid.serializeBinaryToWriter
    );
  }
  f = message.getStyle();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getSubwindowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.msp.cnt.wds.Subwindow.serializeBinaryToWriter
    );
  }
};


/**
 * optional msp.cnt.sch.Tswid id = 1;
 * @return {?proto.msp.cnt.sch.Tswid}
 */
proto.msp.cnt.wds.MergeWnd.prototype.getId = function() {
  return /** @type{?proto.msp.cnt.sch.Tswid} */ (
    jspb.Message.getWrapperField(this, msp_cnt_sch_pb.Tswid, 1));
};


/**
 * @param {?proto.msp.cnt.sch.Tswid|undefined} value
 * @return {!proto.msp.cnt.wds.MergeWnd} returns this
*/
proto.msp.cnt.wds.MergeWnd.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.MergeWnd} returns this
 */
proto.msp.cnt.wds.MergeWnd.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.MergeWnd.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional fixed32 style = 2;
 * @return {number}
 */
proto.msp.cnt.wds.MergeWnd.prototype.getStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.MergeWnd} returns this
 */
proto.msp.cnt.wds.MergeWnd.prototype.setStyle = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Subwindow subwindow = 3;
 * @return {!Array<!proto.msp.cnt.wds.Subwindow>}
 */
proto.msp.cnt.wds.MergeWnd.prototype.getSubwindowList = function() {
  return /** @type{!Array<!proto.msp.cnt.wds.Subwindow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.wds.Subwindow, 3));
};


/**
 * @param {!Array<!proto.msp.cnt.wds.Subwindow>} value
 * @return {!proto.msp.cnt.wds.MergeWnd} returns this
*/
proto.msp.cnt.wds.MergeWnd.prototype.setSubwindowList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msp.cnt.wds.Subwindow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.wds.Subwindow}
 */
proto.msp.cnt.wds.MergeWnd.prototype.addSubwindow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msp.cnt.wds.Subwindow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.wds.MergeWnd} returns this
 */
proto.msp.cnt.wds.MergeWnd.prototype.clearSubwindowList = function() {
  return this.setSubwindowList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.wds.MergeWnds.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.MergeWnds.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.MergeWnds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.MergeWnds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.MergeWnds.toObject = function(includeInstance, msg) {
  var f, obj = {
    mergewndList: jspb.Message.toObjectList(msg.getMergewndList(),
    proto.msp.cnt.wds.MergeWnd.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.MergeWnds}
 */
proto.msp.cnt.wds.MergeWnds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.MergeWnds;
  return proto.msp.cnt.wds.MergeWnds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.MergeWnds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.MergeWnds}
 */
proto.msp.cnt.wds.MergeWnds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.wds.MergeWnd;
      reader.readMessage(value,proto.msp.cnt.wds.MergeWnd.deserializeBinaryFromReader);
      msg.addMergewnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.MergeWnds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.MergeWnds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.MergeWnds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.MergeWnds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMergewndList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.wds.MergeWnd.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MergeWnd mergewnd = 1;
 * @return {!Array<!proto.msp.cnt.wds.MergeWnd>}
 */
proto.msp.cnt.wds.MergeWnds.prototype.getMergewndList = function() {
  return /** @type{!Array<!proto.msp.cnt.wds.MergeWnd>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.wds.MergeWnd, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.wds.MergeWnd>} value
 * @return {!proto.msp.cnt.wds.MergeWnds} returns this
*/
proto.msp.cnt.wds.MergeWnds.prototype.setMergewndList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.wds.MergeWnd=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.wds.MergeWnd}
 */
proto.msp.cnt.wds.MergeWnds.prototype.addMergewnd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.wds.MergeWnd, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.wds.MergeWnds} returns this
 */
proto.msp.cnt.wds.MergeWnds.prototype.clearMergewndList = function() {
  return this.setMergewndList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Rect.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Rect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Rect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Rect.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    w: jspb.Message.getFieldWithDefault(msg, 3, 0),
    h: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Rect}
 */
proto.msp.cnt.wds.Rect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Rect;
  return proto.msp.cnt.wds.Rect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Rect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Rect}
 */
proto.msp.cnt.wds.Rect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setW(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setH(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Rect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Rect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Rect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Rect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getW();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getH();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
};


/**
 * optional sint32 x = 1;
 * @return {number}
 */
proto.msp.cnt.wds.Rect.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Rect} returns this
 */
proto.msp.cnt.wds.Rect.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sint32 y = 2;
 * @return {number}
 */
proto.msp.cnt.wds.Rect.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Rect} returns this
 */
proto.msp.cnt.wds.Rect.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 w = 3;
 * @return {number}
 */
proto.msp.cnt.wds.Rect.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Rect} returns this
 */
proto.msp.cnt.wds.Rect.prototype.setW = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 h = 4;
 * @return {number}
 */
proto.msp.cnt.wds.Rect.prototype.getH = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Rect} returns this
 */
proto.msp.cnt.wds.Rect.prototype.setH = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Window.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Window.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Window} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Window.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sceneid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tvid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    srcid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    layout: (f = msg.getLayout()) && proto.msp.cnt.wds.Rect.toObject(includeInstance, f),
    style: jspb.Message.getFieldWithDefault(msg, 6, 0),
    audio: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    layer: jspb.Message.getFieldWithDefault(msg, 8, 0),
    iscut: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    cut: (f = msg.getCut()) && proto.msp.cnt.wds.Rect.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Window}
 */
proto.msp.cnt.wds.Window.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Window;
  return proto.msp.cnt.wds.Window.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Window} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Window}
 */
proto.msp.cnt.wds.Window.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSceneid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setTvid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSrcid(value);
      break;
    case 5:
      var value = new proto.msp.cnt.wds.Rect;
      reader.readMessage(value,proto.msp.cnt.wds.Rect.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setStyle(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAudio(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setLayer(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscut(value);
      break;
    case 10:
      var value = new proto.msp.cnt.wds.Rect;
      reader.readMessage(value,proto.msp.cnt.wds.Rect.deserializeBinaryFromReader);
      msg.setCut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Window.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Window.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Window} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Window.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getSceneid();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getTvid();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getSrcid();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.msp.cnt.wds.Rect.serializeBinaryToWriter
    );
  }
  f = message.getStyle();
  if (f !== 0) {
    writer.writeFixed32(
      6,
      f
    );
  }
  f = message.getAudio();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLayer();
  if (f !== 0) {
    writer.writeFixed32(
      8,
      f
    );
  }
  f = message.getIscut();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCut();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.msp.cnt.wds.Rect.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 sceneid = 2;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getSceneid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setSceneid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 tvid = 3;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getTvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setTvid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 srcid = 4;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getSrcid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setSrcid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Rect layout = 5;
 * @return {?proto.msp.cnt.wds.Rect}
 */
proto.msp.cnt.wds.Window.prototype.getLayout = function() {
  return /** @type{?proto.msp.cnt.wds.Rect} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.wds.Rect, 5));
};


/**
 * @param {?proto.msp.cnt.wds.Rect|undefined} value
 * @return {!proto.msp.cnt.wds.Window} returns this
*/
proto.msp.cnt.wds.Window.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.Window.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional fixed32 style = 6;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setStyle = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool audio = 7;
 * @return {boolean}
 */
proto.msp.cnt.wds.Window.prototype.getAudio = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setAudio = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional fixed32 layer = 8;
 * @return {number}
 */
proto.msp.cnt.wds.Window.prototype.getLayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setLayer = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool iscut = 9;
 * @return {boolean}
 */
proto.msp.cnt.wds.Window.prototype.getIscut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.setIscut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional Rect cut = 10;
 * @return {?proto.msp.cnt.wds.Rect}
 */
proto.msp.cnt.wds.Window.prototype.getCut = function() {
  return /** @type{?proto.msp.cnt.wds.Rect} */ (
    jspb.Message.getWrapperField(this, proto.msp.cnt.wds.Rect, 10));
};


/**
 * @param {?proto.msp.cnt.wds.Rect|undefined} value
 * @return {!proto.msp.cnt.wds.Window} returns this
*/
proto.msp.cnt.wds.Window.prototype.setCut = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.Window} returns this
 */
proto.msp.cnt.wds.Window.prototype.clearCut = function() {
  return this.setCut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.Window.prototype.hasCut = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msp.cnt.wds.Windows.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Windows.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Windows.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Windows} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Windows.toObject = function(includeInstance, msg) {
  var f, obj = {
    windowList: jspb.Message.toObjectList(msg.getWindowList(),
    proto.msp.cnt.wds.Window.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Windows}
 */
proto.msp.cnt.wds.Windows.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Windows;
  return proto.msp.cnt.wds.Windows.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Windows} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Windows}
 */
proto.msp.cnt.wds.Windows.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msp.cnt.wds.Window;
      reader.readMessage(value,proto.msp.cnt.wds.Window.deserializeBinaryFromReader);
      msg.addWindow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Windows.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Windows.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Windows} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Windows.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWindowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msp.cnt.wds.Window.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Window window = 1;
 * @return {!Array<!proto.msp.cnt.wds.Window>}
 */
proto.msp.cnt.wds.Windows.prototype.getWindowList = function() {
  return /** @type{!Array<!proto.msp.cnt.wds.Window>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msp.cnt.wds.Window, 1));
};


/**
 * @param {!Array<!proto.msp.cnt.wds.Window>} value
 * @return {!proto.msp.cnt.wds.Windows} returns this
*/
proto.msp.cnt.wds.Windows.prototype.setWindowList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msp.cnt.wds.Window=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msp.cnt.wds.Window}
 */
proto.msp.cnt.wds.Windows.prototype.addWindow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msp.cnt.wds.Window, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msp.cnt.wds.Windows} returns this
 */
proto.msp.cnt.wds.Windows.prototype.clearWindowList = function() {
  return this.setWindowList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.WndDesc.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.WndDesc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.WndDesc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.WndDesc.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && msp_cnt_sch_pb.Tswid.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.WndDesc}
 */
proto.msp.cnt.wds.WndDesc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.WndDesc;
  return proto.msp.cnt.wds.WndDesc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.WndDesc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.WndDesc}
 */
proto.msp.cnt.wds.WndDesc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new msp_cnt_sch_pb.Tswid;
      reader.readMessage(value,msp_cnt_sch_pb.Tswid.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.WndDesc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.WndDesc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.WndDesc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.WndDesc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      msp_cnt_sch_pb.Tswid.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional msp.cnt.sch.Tswid id = 1;
 * @return {?proto.msp.cnt.sch.Tswid}
 */
proto.msp.cnt.wds.WndDesc.prototype.getId = function() {
  return /** @type{?proto.msp.cnt.sch.Tswid} */ (
    jspb.Message.getWrapperField(this, msp_cnt_sch_pb.Tswid, 1));
};


/**
 * @param {?proto.msp.cnt.sch.Tswid|undefined} value
 * @return {!proto.msp.cnt.wds.WndDesc} returns this
*/
proto.msp.cnt.wds.WndDesc.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.WndDesc} returns this
 */
proto.msp.cnt.wds.WndDesc.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.WndDesc.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.msp.cnt.wds.WndDesc.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.wds.WndDesc} returns this
 */
proto.msp.cnt.wds.WndDesc.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Reorder.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Reorder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Reorder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Reorder.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sceneid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tvid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Reorder}
 */
proto.msp.cnt.wds.Reorder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Reorder;
  return proto.msp.cnt.wds.Reorder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Reorder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Reorder}
 */
proto.msp.cnt.wds.Reorder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setSceneid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setTvid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Reorder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Reorder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Reorder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Reorder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getSceneid();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getTvid();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.wds.Reorder.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Reorder} returns this
 */
proto.msp.cnt.wds.Reorder.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 sceneid = 2;
 * @return {number}
 */
proto.msp.cnt.wds.Reorder.prototype.getSceneid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Reorder} returns this
 */
proto.msp.cnt.wds.Reorder.prototype.setSceneid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 tvid = 3;
 * @return {number}
 */
proto.msp.cnt.wds.Reorder.prototype.getTvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Reorder} returns this
 */
proto.msp.cnt.wds.Reorder.prototype.setTvid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 order = 4;
 * @return {number}
 */
proto.msp.cnt.wds.Reorder.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Reorder} returns this
 */
proto.msp.cnt.wds.Reorder.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.Ptz.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.Ptz.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.Ptz} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Ptz.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    beid: (f = msg.getBeid()) && msp_cnt_sch_pb.Tswid.toObject(includeInstance, f),
    param: jspb.Message.getFieldWithDefault(msg, 3, 0),
    code: jspb.Message.getFieldWithDefault(msg, 4, 0),
    on: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.Ptz}
 */
proto.msp.cnt.wds.Ptz.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.Ptz;
  return proto.msp.cnt.wds.Ptz.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.Ptz} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.Ptz}
 */
proto.msp.cnt.wds.Ptz.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = new msp_cnt_sch_pb.Tswid;
      reader.readMessage(value,msp_cnt_sch_pb.Tswid.deserializeBinaryFromReader);
      msg.setBeid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setParam(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.Ptz.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.Ptz.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.Ptz} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.Ptz.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getBeid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      msp_cnt_sch_pb.Tswid.serializeBinaryToWriter
    );
  }
  f = message.getParam();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeFixed32(
      4,
      f
    );
  }
  f = message.getOn();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.wds.Ptz.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Ptz} returns this
 */
proto.msp.cnt.wds.Ptz.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional msp.cnt.sch.Tswid beid = 2;
 * @return {?proto.msp.cnt.sch.Tswid}
 */
proto.msp.cnt.wds.Ptz.prototype.getBeid = function() {
  return /** @type{?proto.msp.cnt.sch.Tswid} */ (
    jspb.Message.getWrapperField(this, msp_cnt_sch_pb.Tswid, 2));
};


/**
 * @param {?proto.msp.cnt.sch.Tswid|undefined} value
 * @return {!proto.msp.cnt.wds.Ptz} returns this
*/
proto.msp.cnt.wds.Ptz.prototype.setBeid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msp.cnt.wds.Ptz} returns this
 */
proto.msp.cnt.wds.Ptz.prototype.clearBeid = function() {
  return this.setBeid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msp.cnt.wds.Ptz.prototype.hasBeid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional fixed32 param = 3;
 * @return {number}
 */
proto.msp.cnt.wds.Ptz.prototype.getParam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Ptz} returns this
 */
proto.msp.cnt.wds.Ptz.prototype.setParam = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed32 code = 4;
 * @return {number}
 */
proto.msp.cnt.wds.Ptz.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Ptz} returns this
 */
proto.msp.cnt.wds.Ptz.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed32 on = 5;
 * @return {number}
 */
proto.msp.cnt.wds.Ptz.prototype.getOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.Ptz} returns this
 */
proto.msp.cnt.wds.Ptz.prototype.setOn = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msp.cnt.wds.RealPlay.prototype.toObject = function(opt_includeInstance) {
  return proto.msp.cnt.wds.RealPlay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msp.cnt.wds.RealPlay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.RealPlay.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gbid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msp.cnt.wds.RealPlay}
 */
proto.msp.cnt.wds.RealPlay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msp.cnt.wds.RealPlay;
  return proto.msp.cnt.wds.RealPlay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msp.cnt.wds.RealPlay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msp.cnt.wds.RealPlay}
 */
proto.msp.cnt.wds.RealPlay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGbid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msp.cnt.wds.RealPlay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msp.cnt.wds.RealPlay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msp.cnt.wds.RealPlay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msp.cnt.wds.RealPlay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getGbid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional fixed32 id = 1;
 * @return {number}
 */
proto.msp.cnt.wds.RealPlay.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msp.cnt.wds.RealPlay} returns this
 */
proto.msp.cnt.wds.RealPlay.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string gbid = 2;
 * @return {string}
 */
proto.msp.cnt.wds.RealPlay.prototype.getGbid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.wds.RealPlay} returns this
 */
proto.msp.cnt.wds.RealPlay.prototype.setGbid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.msp.cnt.wds.RealPlay.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msp.cnt.wds.RealPlay} returns this
 */
proto.msp.cnt.wds.RealPlay.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.msp.cnt.wds.OPCODE = {
  OPTOP: 0,
  OPBOTTOM: 1,
  OPUP: 2,
  OPDOWN: 3,
  OPOPEN: 4,
  OPCLOSE: 5,
  OPCLEAN: 6
};

/**
 * @enum {number}
 */
proto.msp.cnt.wds.PTZCODE = {
  CODENONE: 0,
  ZOOMLARGER: 11,
  ZOOMSMALL: 12,
  FOCUSNEAR: 13,
  FOCUSFAR: 14,
  LIGHTLARGER: 15,
  LIGHTSMALL: 16,
  MOVEUP: 21,
  MOVEDOWN: 22,
  MOVELEFT: 23,
  MOVERIGHT: 24,
  MOVELUP: 25,
  MOVERUP: 26,
  MOVELDOWN: 27,
  MOVERDOWN: 28,
  MOVEAUTO: 29,
  GOTOPRESET: 39,
  SETPRESET: 40
};

goog.object.extend(exports, proto.msp.cnt.wds);
